What happens when you initialize a repository? Why do you need to do it?
The hidden files containing the metadata about the changes made to the repository are created
so that git is ready to start tracking any changes that you need it to track 

How is the staging area different from the working directory and the repository?
The staging area is where you put files that you plan to track changes to.
What value do you think it offers?
It gets you to think about what changes you need to track and the logical relationship
between files.

How can you use the staging area to make sure you have one commit per logical
change?
You can compare the working directpry to the staging area using git diff - this allows you to see
what has chnaged between the working area and the staging area. You can add the logical change that 
you wnat to track to the staging area and compare that to the repository using git diff --staged and
then you can commit the relevant logical change with the appropriate commit message.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
You could create a branch if you wanted to try to add a new featture to you code but you weren't sure
if the new feature would be a valulable addition or not, you could add a branch to make a backup, you can add
a branch if you wanted to change the look of you application and you were experimenting, you could add a branch
if you were collaborating with someone else.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?