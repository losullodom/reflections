How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed what lines from the old version had been removed and what line in the new version
    has been added - so you only had to examine these areas of the file rather than every line.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows you to back track at any giben momemnt in time to a previous version of the file.
    This is useful because as a programmer you are constantly adding features and functionality to your
    code - you might make one small change and unintentionally this change could have a dramatic
    impact on the rest of your program. In situations such as these it is important to be able
    to roll back your changes to a previous stable version of your program.
    

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Automatic saving is good in that you can guarantee you will versoins of your code available, 
    however, the times at which the save takes places cannot be controlled so it maye be difficult
    to determine what the pourpose of the overall change was.

    Manually choosing when to save is a good idea in that the user can decide when a version of the code
    warrants saving as the purpose of the change can be clearly defined. However, on the downside, it is 
    up to the user and is reliant on the user to commit a change or changes - the user can forget in
    which case so many changes could have been made between commits that it may be difficult to determine
    what changes occured and why.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Alot of the time when developing software your projects can consist of many inter-related files. Therefore
    a changes to one of the  files may have an impact on the other files.

    GoogleDocs on the other hand is web-based application for preparing documents which are ofen unrelated - changes to one
    document may or may not have consequences for another document.

How can you use the commands git log and git diff to view the history of files?

    Use git log to get a listing of all fo the changes to the files in the repository.
    To see what changed between two commits use git diff with the id of the commit that ocurred before the change and the id of the 
    commit that corresponds to the change. The lines added will be marked with a + and the lines removed will be marked with a -.
    

How might using version control make you more confident to make changes that
could break something?

    You can feel safe in the knowledge that you can quickly and easily revert to an older version of your code that was working. Therefore, breaking something is no big deal!!

Now that you have your workspace set up, what do you want to try using Git for?

    I want to look into how I could encourage new programmers to start using git from the get go.
